'''1.
Write a Python program to combine each line from first file with the corresponding line in second file'''

file1=open('demo1.txt','rwa')
file2=open('demo2.txt','r')
for i in file1:
   a=file1.readline()
   b=file2.readline()
   c=a+b
   file1.write(c)

   
   
  '''2.
Count new lines in file'''

file1=open('demo','r')
count=0
for i in file1:
    count=count+1
print(count)

'''3.

Write a Python function that accepts a string and calculate the number of upper case letters and lower case letters.


Sample String : 'The quick Brow Fox'
Expected Output : 
No. of Upper case characters : 3
No. of Lower case Characters : 12
'''

def printcases(input_st):
   
   upper_case=0
   lower_case=0
   for i in input_st:
     if ord(i)>=65 and ord(i)<=90:
       upper_case=upper_case+1
     if ord(i)>=97 and ord(i)<=122:
       lower_case=lower_case+1
  
   print('no. of upper case characters:',upper_case)
   print('no. of lower case characters:',lower_case)

input_s=input('enter the string')
printcases(input_s)




'''4.
Write a Python function that takes a list and returns a new list with unique elements of the first list. Without using set
Sample List : [1,2,3,3,3,3,4,5]
Unique List : [1, 2, 3, 4, 5]'''


'''def is_unique(input_list):
   templist1=[]
   for i in input_list:
     if i in templist1:
      break
     else:
      templist1.append(i)
print(templist1)

num_of_ele=int(input("enter the number of elements :'))
li=[]
for i in range(1,num_of_ele+1):
  li.append(i)
is_unique(li)'''
-----------------
b.
def is_unique(li):
  l=[]
  for i in l1:
     if i not in l:
        l.append(i)
print(l)

l1=[1,2,3,3,3,3,4,5]
is_unique(l1) 
   
  
   
'''5.
Write a Python function to check whether a string is a pangram or not. 


Note : Pangrams are words or sentences containing every letter of the alphabet at least once.
For example : "The quick brown fox jumps over the lazy dog"'''



def is_pangram(inputs):
  li=[]
  for i in range(65,91):
     li.append(ord(i))
  for i in inputs:
    if i not in li:
      return False
  return True

input_st=input('enter the string')
 if(is_pangram()==True):
  print('it is pangram')
 else:
  print('it is not pangram')


'''6.

Write a Python program that accepts a hyphen-separated sequence of words as input and prints the words in a hyphen-separated 
sequence after sorting them alphabetically. 


Sample Items : green-red-yellow-black-white
Expected Result : black-green-red-white-yellow'''

input_str=input(r'enter the string')
s1=input_str.split('-')
print(s1)
s1.sort()
print(s1)
s2='-'.join(s1)
print(s2)



   
  